# Generated by precisionFDA exporter (v1.0.3) on 2018-06-14 16:17:05 +0000
# The asset download links in this file are valid only for 24h.

# Exported app: picard-meanqualitybycycle, revision: 1, authored by: adam.halstead
# https://precision.fda.gov/apps/app-F0g3XXQ0ZQP4PQyxf11v56Kp

# For more information please consult the app export section in the precisionFDA docs

# Start with Ubuntu 14.04 base image
FROM ubuntu:14.04

# Install default precisionFDA Ubuntu packages
RUN DEBIAN_FRONTEND=noninteractive apt-get update && apt-get install -y \
	aria2 \
	byobu \
	cmake \
	cpanminus \
	curl \
	dstat \
	g++ \
	git \
	htop \
	libboost-all-dev \
	libcurl4-openssl-dev \
	libncurses5-dev \
	make \
	perl \
	pypy \
	python-dev \
	python-pip \
	r-base \
	ruby1.9.3 \
	wget \
	xz-utils

# Install default precisionFDA python packages
RUN pip install \
	requests==2.5.0 \
	futures==2.2.0 \
	setuptools==10.2

# Add DNAnexus repo to apt-get
RUN /bin/bash -c "echo 'deb http://dnanexus-apt-prod.s3.amazonaws.com/ubuntu trusty/amd64/' > /etc/apt/sources.list.d/dnanexus.list"
RUN /bin/bash -c "echo 'deb http://dnanexus-apt-prod.s3.amazonaws.com/ubuntu trusty/all/' >> /etc/apt/sources.list.d/dnanexus.list"
RUN curl https://wiki.dnanexus.com/images/files/ubuntu-signing-key.gpg | apt-key add -

# Install app-specific Ubuntu packages
RUN DEBIAN_FRONTEND=noninteractive apt-get update && apt-get install -y \
	openjdk-7-jre-headless

# Download app assets
RUN curl https://dl.dnanex.us/F/D/76GVg15FGJFjQBFjzfYZyYzqz6q9FKgBZv48vPbX/picard-tools-1.141.tar.gz | tar xzf - -C / --no-same-owner --no-same-permissions

# Download helper executables
RUN curl https://dl.dnanex.us/F/D/0K8P4zZvjq9vQ6qV0b6QqY1z2zvfZ0QKQP4gjBXp/emit-1.0.tar.gz | tar xzf - -C /usr/bin/ --no-same-owner --no-same-permissions
RUN curl https://dl.dnanex.us/F/D/bByKQvv1F7BFP3xXPgYXZPZjkXj9V684VPz8gb7p/run-1.2.tar.gz | tar xzf - -C /usr/bin/ --no-same-owner --no-same-permissions

# Write app spec and code to root folder
RUN ["/bin/bash","-c","echo -E \\{\\\"spec\\\":\\{\\\"input_spec\\\":\\[\\{\\\"name\\\":\\\"input_bam\\\",\\\"class\\\":\\\"file\\\",\\\"optional\\\":false,\\\"label\\\":\\\"Input\\ BAM\\\",\\\"help\\\":\\\"Input\\ BAM\\ file\\\",\\\"default\\\":\\\"file-F0GJXZ00pFgJKJFVg9KK4ZBk\\\"\\},\\{\\\"name\\\":\\\"options\\\",\\\"class\\\":\\\"string\\\",\\\"optional\\\":true,\\\"label\\\":\\\"Options\\\",\\\"help\\\":\\\"Additional\\ options\\\"\\}\\],\\\"output_spec\\\":\\[\\{\\\"name\\\":\\\"mean_qual_by_cycle_text\\\",\\\"class\\\":\\\"file\\\",\\\"optional\\\":false,\\\"label\\\":\\\"Output\\ text\\ file\\\",\\\"help\\\":\\\"Output\\ text\\ file\\\"\\},\\{\\\"name\\\":\\\"mean_qual_by_cycle_chart\\\",\\\"class\\\":\\\"file\\\",\\\"optional\\\":false,\\\"label\\\":\\\"Output\\ chart\\ file\\\",\\\"help\\\":\\\"A\\ file\\ \\(with\\ .pdf\\ extension\\)\\ to\\ write\\ the\\ chart\\ to\\\"\\}\\],\\\"internet_access\\\":false,\\\"instance_type\\\":\\\"baseline-8\\\"\\},\\\"assets\\\":\\[\\\"file-BkXzv480X24QKx39JQ4v5KBq\\\"\\],\\\"packages\\\":\\[\\\"openjdk-7-jre-headless\\\"\\]\\} \u003e /spec.json"]
RUN ["/bin/bash","-c","echo -E \\{\\\"code\\\":\\\"java\\ -jar\\ /usr/bin/picard.jar\\ MeanQualityByCycle\\ \\\\\\\\\\\\n\\ \\ \\ \\ \\ \\ I\\=\\$input_bam_path\\ \\\\\\\\\\\\n\\ \\ \\ \\ \\ \\ O\\=mean_qual_by_cycle.txt\\ \\\\\\\\\\\\n\\ \\ \\ \\ \\ \\ CHART\\=mean_qual_by_cycle.pdf\\ \\\\\\\\\\\\n\\ \\ \\ \\ \\ \\ \\$options\\\\n\\ \\ \\ \\ \\ \\ \\\\nemit\\ mean_qual_by_cycle_text\\ mean_qual_by_cycle.txt\\\\nemit\\ mean_qual_by_cycle_chart\\ mean_qual_by_cycle.pdf\\\\n\\\"\\} | python -c 'import sys,json; print json.load(sys.stdin)[\"code\"]' \u003e /script.sh"]

# Create directory /work and set it to $HOME and CWD
RUN mkdir -p /work
ENV HOME="/work"
WORKDIR /work

# Set entry point to container
ENTRYPOINT ["/usr/bin/run"]

VOLUME /data
VOLUME /work